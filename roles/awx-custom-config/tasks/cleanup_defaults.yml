---

#- name: Copy tokens.yml file to local machine
#  ansible.builtin.fetch:
#    src: /data/projects/awx/tokens.yml
#    dest: /tmp/tokens.yml
#    flat: yes

- name: Include AWX/Automation Controller master token from awx_tokens.yml
  delegate_to: 127.0.0.1
  include_vars:
    file: '{{ playbook_dir }}/group_vars/all.yml'
  no_log: True
  run_once: true

- name: Set master_token if already generated in this run. (This allows this task list to execute inside AWX.)
  ansible.builtin.set_fact:
    master_token: "{{ awx_token.ansible_facts.tower_token.token }}"
  when: awx_token.ansible_facts.tower_token.token is defined
  run_once: true

- name: Create a AWX/Automation Controller session token for executing AWX modules
  delegate_to: 127.0.0.1
  awx.awx.tower_token:
    description: 'AWX/Automation Controller Session Token'
    scope: "write"
    state: present
    tower_host: "https://{{ awx_subdomain }}.{{ awx_base_domain }}"
    tower_oauthtoken: "{{ master_token }}"
    validate_certs: "{{ validate_certs }}"
  register: awx_session_token
  run_once: true

- name: Remove the default 'Demo Job Template'
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "Demo Job Template"
    job_type: run
    project: "Demo Project"
    playbook: hello_world.yml
    state: absent
    tower_host: "https://{{ awx_subdomain }}.{{ awx_base_domain }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: "{{ validate_certs }}"
  run_once: true

- name: Remove the default 'Demo Project'
  delegate_to: 127.0.0.1
  awx.awx.tower_project:
    name: "Demo Project"
    organization: "Default"
    state: absent
    tower_host: "https://{{ awx_subdomain }}.{{ awx_base_domain }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: "{{ validate_certs }}"
  ignore_errors: true
  run_once: true

- name: Remove the default 'Demo Inventory'
  delegate_to: 127.0.0.1
  awx.awx.tower_inventory:
    name: "Demo Inventory"
    organization: "Default"
    state: absent
    tower_host: "https://{{ awx_subdomain }}.{{ awx_base_domain }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: "{{ validate_certs }}"
  ignore_errors: true
  run_once: true

- name: Remove the default 'Demo Credential' credential
  delegate_to: 127.0.0.1
  awx.awx.tower_credential:
    name: "Demo Credential"
    user: "admin"
    credential_type: ssh
    state: absent
    tower_host: "https://{{ awx_subdomain }}.{{ awx_base_domain }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: "{{ validate_certs }}"
  ignore_errors: true
  run_once: true

- name: Remove the default 'Default' organisation
  delegate_to: 127.0.0.1
  awx.awx.tower_organization:
    name: "Default"
    state: absent
    tower_host: "https://{{ awx_subdomain }}.{{ awx_base_domain }}"
    tower_oauthtoken: "{{ awx_session_token.ansible_facts.tower_token.token }}"
    validate_certs: "{{ validate_certs }}"
  ignore_errors: true
  run_once: true
