---

- name: Set the awx_vault_password variable if not defined
  set_fact:
    awx_vault_password: "{{ lookup('password', '/dev/null length=64 chars=ascii_letters,digits') }}"
  when: awx_vault_password is not defined
  run_once: true
  no_log: true

- name: Create a Vault credential for AWX
  delegate_to: localhost
  awx.awx.credential:
    name: "AWX Vault Secret"
    description: "An AWX vault secret that unlocks encrypted variables."
    organization: "{{ awx_org_name }}"
    credential_type: Vault
    state: present
    inputs:
      vault_id: "awx-secrets"
      vault_password: "{{ awx_vault_password }}"
    controller_host: "https://{{ awx_domain }}"
    controller_oauthtoken: "{{ awx_oauth_token }}"
    validate_certs: "{{ validate_certs }}"
  run_once: true 

- name: Read private key for AWX Resources repository
  delegate_to: localhost
  ansible.builtin.slurp:
    src: "{{ awx_resources_deploy_key }}"
  register: awx_resources_deploy_key_content
  run_once: true
  no_log: true

- name: Add a SCM credential for the AWX Resources repository
  delegate_to: localhost
  awx.awx.credential:
    name: "AWX Resources SCM"
    description: "The SCM credential for the AWX Resources repository."
    organization: "{{ awx_org_name }}"
    credential_type: Source Control
    state: present
    inputs:
      username: "{{ awx_resources_git_username }}"
      ssh_key_data: "{{ awx_resources_deploy_key_content['content'] | b64decode }}"
    controller_host: "https://{{ awx_domain }}"
    controller_oauthtoken: "{{ awx_oauth_token }}"
    validate_certs: "{{ validate_certs }}"
  run_once: true

- name: Add 'AWX Ansible' project to AWX admins organisation
  delegate_to: localhost
  awx.awx.project:
    name: "AWX Ansible"
    description: "The playbook for this AWX setup."
    organization: "{{ awx_org_name }}"
    scm_type: git
    scm_url: "{{ awx_deploy_source }}"
    scm_branch: "{{ awx_deploy_branch }}"
    scm_delete_on_update: yes
    scm_update_on_launch: no
    state: present
    controller_host: "https://{{ awx_domain }}"
    controller_oauthtoken: "{{ awx_oauth_token }}"
    validate_certs: "{{ validate_certs }}"
  run_once: true

- name: Update 'AWX Ansible' project
  delegate_to: localhost
  awx.awx.project_update:
    name: "AWX Ansible"
    timeout: 300
    controller_host: "https://{{ awx_domain }}"
    controller_oauthtoken: "{{ awx_oauth_token }}"
    validate_certs: "{{ validate_certs }}"
  run_once: true

- name: Add 'AWX Resources' project to AWX admins organisation
  delegate_to: localhost
  awx.awx.project:
    name: "AWX Resources"
    description: "The external playbook for resources being setup on this AWX instance."
    organization: "{{ awx_org_name }}"
    scm_type: git
    scm_url: "{{ awx_resources_source }}"
    scm_branch: "{{ awx_resources_branch }}"
    scm_delete_on_update: yes
    scm_update_on_launch: yes
    credential: "AWX Resources SCM"
    state: present
    controller_host: "https://{{ awx_domain }}"
    controller_oauthtoken: "{{ awx_oauth_token }}"
    validate_certs: "{{ validate_certs }}"
  run_once: true

- name: Update 'AWX Resources' project
  delegate_to: localhost
  awx.awx.project_update:
    name: "AWX Resources"
    timeout: 300
    controller_host: "https://{{ awx_domain }}"
    controller_oauthtoken: "{{ awx_oauth_token }}"
    validate_certs: "{{ validate_certs }}"
  run_once: true

- name: Create 'AWX Deploy Resources' job template
  delegate_to: localhost
  awx.awx.job_template:
    name: "AWX Deploy Resources"
    description: "Deploys EHI AWX Resources onto AWX."
    job_type: run
    inventory: "Localhost"
    project: "AWX Resources"
    playbook: "setup.yml"
    #instance_groups: ["AWX Server (Custom Runner)"]
    job_tags: 'setup-all'
    credentials: [ "AWX Vault Secret" ]
    extra_vars: {
      awx_token: "{{ awx_oauth_token }}"
      }
    state: present
    verbosity: 1
    controller_host: "https://{{ awx_domain }}"
    controller_oauthtoken: "{{ awx_oauth_token }}"
    validate_certs: "{{ validate_certs }}"
  run_once: true

- name: Create an rrule string for the 'AWX Deploy Resources' schedule
  set_fact:
    rrule_line_update: "DTSTART;TZID={{ awx_timezone }}:{{ awx_resources_schedule_start }} RRULE:FREQ={{ awx_resources_schedule_frequency }};INTERVAL={{ awx_resources_schedule_interval }}"
  run_once: true

- name: Build a schedule for 'AWX Deploy Resources' job template
  awx.awx.schedule:
    name: "AWX Deploy Resources"
    enabled: yes
    state: present
    unified_job_template: "AWX Deploy Resources"
    #extra_data: "{{ lookup('file', '{{ role_path }}/extra-vars/awx_resources.json') }}"
    rrule: "{{ rrule_line_update }}"
    controller_host: "https://{{ awx_domain }}"
    controller_oauthtoken: "{{ awx_oauth_token }}"
    validate_certs: "{{ validate_certs }}"
  run_once: true
