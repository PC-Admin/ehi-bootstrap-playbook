---

- name: make sure certbot is installed on rke2_bootstrap_node
  delegate_to: "{{ rke2_bootstrap_node }}"
  apt:
    name: certbot
    state: present
  run_once: True

- name: Generate Let's Encrypt certificate for leader.{{ awx_base_domain }}
  delegate_to: "{{ rke2_bootstrap_node }}"
  ansible.builtin.shell: |
      certbot certonly --standalone --non-interactive --preferred-challenges http --agree-tos --email {{ letsencrypt_email }} -d leader.{{ awx_base_domain }}
  register: certbot_result
  run_once: True

- name: Fetch DigitalOcean Certificate information
  delegate_to: 127.0.0.1
  community.digitalocean.digital_ocean_certificate_info:
    oauth_token: "{{ do_api_token }}"
  register: do_certificates_info
  run_once: True

- name: DEBUG print do_certificates_info variable
  debug:
    msg: "do_certificates_info: {{ do_certificates_info }}"
  run_once: True

- name: Fetch fullchain file
  delegate_to: "{{ rke2_bootstrap_node }}"
  ansible.builtin.fetch:
    src: "/etc/letsencrypt/live/leader.{{ awx_base_domain }}/fullchain.pem"
    dest: "{{ playbook_dir }}/certs/fullchain.pem"
    flat: yes
  run_once: True

- name: Fetch private key
  delegate_to: "{{ rke2_bootstrap_node }}"
  ansible.builtin.fetch:
    src: "/etc/letsencrypt/live/leader.{{ awx_base_domain }}/privkey.pem"
    dest: "{{ playbook_dir }}/certs/privkey.pem"
    flat: yes
  run_once: True

- name: Create DigitalOcean SSL Certificate for the Load Balancer if it does not exist
  delegate_to: 127.0.0.1
  community.digitalocean.digital_ocean_certificate:
    name: "leader.{{ awx_base_domain }}"
    private_key: "{{ lookup('file', '{{ playbook_dir }}/certs/privkey.pem') }}"
    leaf_certificate: "{{ lookup('file', '/tmp/fullchain.pem') }}"
    state: present
    oauth_token: "{{ do_api_token }}"
  register: new_do_certificate
  #when: existing_certificate is not defined
  run_once: True

# print new_do_certificate variable
- name: DEBUG print new_do_certificate variable
  debug:
    msg: "new_do_certificate: {{ new_do_certificate }}"
  run_once: True
