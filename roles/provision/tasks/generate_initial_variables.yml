---

- name: Gather facts about the controller system
  ansible.builtin.setup:
  delegate_to: 127.0.0.1
  run_once: true

- name: Add SSH config entry for host
  delegate_to: 127.0.0.1
  ansible.builtin.blockinfile:
    path: "/home/{{ lookup('env', 'USER') }}/.ssh/config"
    marker_begin: "BEGIN SSH config entry for {{ awx_subdomain }}.{{ awx_base_domain }}"
    marker_end: "END SSH config entry for {{ awx_subdomain }}.{{ awx_base_domain }}"
    block: |
      Host {{ awx_subdomain }}.{{ awx_base_domain }}
          HostName {{ server_ip_final }}
          User root
          Port 22
          IdentityFile {{ ssh_key_file_private }}
          IdentitiesOnly=yes
  when: ansible_system == 'Linux'

- name: Add HOSTALIASES environment variable to ~/.profile
  delegate_to: 127.0.0.1
  lineinfile:
    path: '~/.profile'
    create: true
    line: "HOSTALIASES ~/.hosts"
    mode: '0600'
    state: present
  when: ansible_system == 'Linux'

- name: Add host entry to ~/.hosts file
  delegate_to: 127.0.0.1
  lineinfile:
    path: '~/.hosts'
    create: true
    regexp: "^.*{{ awx_subdomain }}.{{ awx_base_domain }}$"
    line: "{{ server_ipv4 }} {{ awx_subdomain }}.{{ awx_base_domain }}"
    mode: '0600'
    state: present
  when: ansible_system == 'Linux'

- name: Check known_hosts for {{ inventory_hostname }}
  local_action: shell ssh-keygen -F {{ inventory_hostname }}
  register: has_entry_in_known_hosts_file
  changed_when: false
  ignore_errors: true

- name: Ignore host key for {{ inventory_hostname }} on first run
  set_fact:
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
  when: has_entry_in_known_hosts_file.rc == 1

- name: Wait for SSH connection to become available, with 5 seconds between checks, for a minute
  wait_for_connection:
    sleep: 5
    timeout: 60
  register: ssh_connection_result
  until: ssh_connection_result is success
