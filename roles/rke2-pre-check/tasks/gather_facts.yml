---

- name: Attempt to gather facts from each host
  setup:
    gather_timeout: 30
  ignore_unreachable: True
  register: gather_facts_results
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

#- name: DEBUG print gather_facts_results type
#  debug:
#    msg: "gather_facts_results type: {{ gather_facts_results | type_debug }}"

#- name: DEBUG print gather_facts_results content
#  debug:
#    var: gather_facts_results

#- name: DEBUG print gather_facts_results | list
#  debug:
#    msg: "gather_facts_results: {{ gather_facts_results | list }}"

- name: Set unreachable flag if the host is unreachable
  set_fact:
    host_unreachable: "{{ gather_facts_results.unreachable | default(false) }}"

#- name: DEBUG print host_unreachable
#  debug:
#    var: host_unreachable

- name: Group hosts based on reachability
  group_by:
    key: "{{ 'unreachable_hosts' if host_unreachable | bool else 'reachable_hosts' }}"

#- name: DEBUG print groups
#  debug:
#    var: groups
#  run_once: True

- name: Print a warning if an unreachable host is detected
  debug:
    msg: "WARNING: The hosts {{ groups['unreachable_hosts'] }} are unreachable. You likely need to re-run this playbook with the 'provision' tag."
  when: "'unreachable_hosts' in groups and groups['unreachable_hosts'] | length > 0"
  run_once: True

- name: Stop the playbook if an unreachable host is detected
  meta: end_play
  when: "'unreachable_hosts' in groups and groups['unreachable_hosts'] | length > 0"

- name: Create a dynamic group for controlplane nodes
  group_by:
    key: "controlplane_{{ 'yes' if (hostvars[inventory_hostname]['rke2_type'] is defined and hostvars[inventory_hostname]['rke2_type'] == 'server') else 'no' }}"

- name: Create a dynamic group for nodes with no rke2_type defined
  group_by:
    key: controlplane_no
  when: rke2_type is not defined

- name: Create list of controlplane nodes
  set_fact:
    controlplane_nodes: "{{ groups['controlplane_yes'] }}"
  run_once: True

- name: Set rke2_additional_sans variable
  set_fact:
    rke2_additional_sans: "{{ controlplane_nodes }}"
  run_once: True
